// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "open-cluster-management.io/api/addon/v1alpha1"
)

// AddOnDeploymentConfigLister helps list AddOnDeploymentConfigs.
// All objects returned here must be treated as read-only.
type AddOnDeploymentConfigLister interface {
	// List lists all AddOnDeploymentConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AddOnDeploymentConfig, err error)
	// Get retrieves the AddOnDeploymentConfig from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AddOnDeploymentConfig, error)
	AddOnDeploymentConfigListerExpansion
}

// addOnDeploymentConfigLister implements the AddOnDeploymentConfigLister interface.
type addOnDeploymentConfigLister struct {
	indexer cache.Indexer
}

// NewAddOnDeploymentConfigLister returns a new AddOnDeploymentConfigLister.
func NewAddOnDeploymentConfigLister(indexer cache.Indexer) AddOnDeploymentConfigLister {
	return &addOnDeploymentConfigLister{indexer: indexer}
}

// List lists all AddOnDeploymentConfigs in the indexer.
func (s *addOnDeploymentConfigLister) List(selector labels.Selector) (ret []*v1alpha1.AddOnDeploymentConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AddOnDeploymentConfig))
	})
	return ret, err
}

// Get retrieves the AddOnDeploymentConfig from the index for a given name.
func (s *addOnDeploymentConfigLister) Get(name string) (*v1alpha1.AddOnDeploymentConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("addondeploymentconfig"), name)
	}
	return obj.(*v1alpha1.AddOnDeploymentConfig), nil
}
