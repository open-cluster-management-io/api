package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_LocalPlacementReference = map[string]string{
	"":     "localPlacementReference is the name of a Placement resource in current namespace",
	"name": "Name of the Placement resource in the current namespace",
}

func (LocalPlacementReference) SwaggerDoc() map[string]string {
	return map_LocalPlacementReference
}

var map_ManifestWorkSet = map[string]string{
	"":       "ManifestWorkSet is the Schema for the ManifestWorkSet API. This custom resource is able to apply ManifestWork using Placement for 0..n ManagedCluster(in their namespaces). It will also remove the ManifestWork custom resources when deleted. Lastly the specific ManifestWork custom resources created per ManagedCluster namespace will be adjusted based on PlacementDecision changes.",
	"spec":   "Spec reperesents the desired ManifestWork payload and Placement reference to be reconciled",
	"status": "Status represent the current status of Placing ManifestWork resources",
}

func (ManifestWorkSet) SwaggerDoc() map[string]string {
	return map_ManifestWorkSet
}

var map_ManifestWorkSetList = map[string]string{
	"": "\n\nManifestWorkSetList contains a list of ManifestWorkSet",
}

func (ManifestWorkSetList) SwaggerDoc() map[string]string {
	return map_ManifestWorkSetList
}

var map_ManifestWorkSetSpec = map[string]string{
	"":                     "ManifestWorkSetSpec defines the desired state of ManifestWorkSet",
	"manifestWorkTemplate": "ManifestWorkTemplate is the ManifestWorkSpec that will be used to generate a per-cluster ManifestWork",
	"placementRefs":        "PacementRefs is a list of the names of the Placement resource, from which a PlacementDecision will be found and used to distribute the ManifestWork.",
}

func (ManifestWorkSetSpec) SwaggerDoc() map[string]string {
	return map_ManifestWorkSetSpec
}

var map_ManifestWorkSetStatus = map[string]string{
	"":           "ManifestWorkSetStatus defines the observed state of ManifestWorkSet",
	"conditions": "Conditions contains the different condition statuses for distrbution of ManifestWork resources Valid condition types are: 1. AppliedManifestWorks represents ManifestWorks have been distributed as per placement All, Partial, None, Problem 2. PlacementRefValid",
	"summary":    "Summary totals of resulting ManifestWorks",
}

func (ManifestWorkSetStatus) SwaggerDoc() map[string]string {
	return map_ManifestWorkSetStatus
}

var map_ManifestWorkSetSummary = map[string]string{
	"":          "ManifestWorkSetSummary provides reference counts of all ManifestWorks that are associated with a given ManifestWorkSet resource, for their respective states",
	"total":     "Total number of ManifestWorks managed by the ManifestWorkSet",
	"available": "Available is the number of ManifestWorks with condition Available: true",
	"Applied":   "Applied is the number of ManifestWorks with condition Applied: true",
}

func (ManifestWorkSetSummary) SwaggerDoc() map[string]string {
	return map_ManifestWorkSetSummary
}

// AUTO-GENERATED FUNCTIONS END HERE
